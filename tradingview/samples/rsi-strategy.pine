//@version=5
// ||###################################################################################||
// ||                                                                                   ||
// ||  RSI Strategy                                                                     ||
// ||                                                                                   ||
// ||###################################################################################||

strategy("RSI Strategy", overlay=true)

// === INPUT BACKTEST RANGE ===
fromMonth = input.int(defval=1, title='From Month', minval=1, maxval=12)
fromDay = input.int(defval=1, title='From Day', minval=1, maxval=31)
fromYear = input.int(defval=2021, title='From Year', minval=1970)
thruMonth = input.int(defval=1, title='Thru Month', minval=1, maxval=12)
thruDay = input.int(defval=1, title='Thru Day', minval=1, maxval=31)
thruYear = input.int(defval=2022, title='Thru Year', minval=1970)


length = input( 14 )
overSold = input( 30 )
overBought = input( 70 )
price = close
vrsi = ta.rsi(price, length)
co = ta.crossover(vrsi, overSold)
cu = ta.crossunder(vrsi, overBought)

// === FUNCTION EXAMPLE ===
start = timestamp(fromYear, fromMonth, fromDay, 00, 00)  // backtest start window
finish = timestamp(thruYear, thruMonth, thruDay, 23, 59)  // backtest finish window
window() =>  // create function "within window of time"
    time >= start and time <= finish ? true : false

if (not na(vrsi))
    if (co)
        strategy.entry("RsiLE", strategy.long, comment="RsiLE")
    if (cu)
        strategy.entry("RsiSE", strategy.short, comment="RsiSE")
// if (not na(vrsi))
//     if (co)
//         strategy.entry("RSI_LE", strategy.long, when=window(), comment="RSI_LE")
//     if (cu)
//         strategy.entry("RSI_SE", strategy.short, when=window(), comment="RSI_SE")

//plot(strategy.equity, title="equity", color=color.red, linewidth=2, style=plot.style_areabr)

