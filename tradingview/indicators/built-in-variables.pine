//@version=5
// ||###################################################################################||
// ||                                                                                   ||
// || This Anne-Marie Baiynd indicator is very easy to follow:                          ||
// ||                                                                                   ||
// || The strategy goes long when the faster SMA 50 crosses above the SMA 200.          ||
// || Orders are closed when the SMA 50 crosses below SMA 200. The strategy does not    ||
// || short.                                                                            ||
// ||                                                                                   ||
// || This simple strategy does not have any other stop loss or take profit money       ||
// || management logic.                                                                 ||
// ||                                                                                   ||
// ||###################################################################################||

//@version=5
indicator("Built-in Vars", overlay = true, max_bars_back = 500)

t = input.time(timestamp("01 Jan 2022 00:00 +0000"), "Bar", confirm = true)

bars_ago = ta.barssince(time == t)


var tbl = table.new(position.bottom_right, 12, 15, frame_color=#151715, frame_width=1, border_width=2, border_color=color.new(color.white, 100))

if barstate.islast

    // Header
    table.cell(tbl, 0, 0, "",           bgcolor = color.gray)
    table.cell(tbl, 1, 0, "Basic",      bgcolor = color.gray)
    table.cell(tbl, 2, 0, "",           bgcolor = color.gray)
    table.cell(tbl, 3, 0, "Time",       bgcolor = color.gray)
    table.cell(tbl, 4, 0,               bgcolor = color.gray)
    table.cell(tbl, 5, 0, "Math",       bgcolor = color.gray)
    table.cell(tbl, 4, 5,               bgcolor = color.gray)
    table.cell(tbl, 5, 5, "Barstate",   bgcolor = color.gray)
    table.cell(tbl, 6, 0,               bgcolor = color.gray)
    table.cell(tbl, 7, 0, "Syminfo",    bgcolor = color.gray)
    table.cell(tbl, 8, 0,               bgcolor = color.gray)
    table.cell(tbl, 9, 0, "TA",         bgcolor = color.gray)
    table.cell(tbl, 10, 0,              bgcolor = color.gray)
    table.cell(tbl, 11, 0, "Timeframe", bgcolor = color.gray)


    table.cell(tbl, 0, 1, "open",                  bgcolor = color.gray)
    table.cell(tbl, 1, 1, str.tostring(open[bars_ago]),      bgcolor = #cccccc)
    table.cell(tbl, 0, 2, "high",                  bgcolor = color.gray)
    table.cell(tbl, 1, 2, str.tostring(high[bars_ago]),      bgcolor = #cccccc)
    table.cell(tbl, 0, 3, "low",                   bgcolor = color.gray)
    table.cell(tbl, 1, 3, str.tostring(low[bars_ago]),       bgcolor = #cccccc)
    table.cell(tbl, 0, 4, "close",                 bgcolor = color.gray)
    table.cell(tbl, 1, 4, str.tostring(close[bars_ago]),     bgcolor = #cccccc)
    table.cell(tbl, 0, 5, "hl2",                   bgcolor = color.gray)
    table.cell(tbl, 1, 5, str.tostring(hl2[bars_ago]),       bgcolor = #cccccc)
    table.cell(tbl, 0, 6, "hlc3",                  bgcolor = color.gray)
    table.cell(tbl, 1, 6, str.tostring(hlc3[bars_ago], format.mintick),      bgcolor = #cccccc)
    table.cell(tbl, 0, 7, "ohlc4",                 bgcolor = color.gray)
    table.cell(tbl, 1, 7, str.tostring(ohlc4[bars_ago], format.mintick),     bgcolor = #cccccc)
    table.cell(tbl, 0, 8, "volume",                bgcolor = color.gray)
    table.cell(tbl, 1, 8, str.tostring(math.round(volume[bars_ago],2)),    bgcolor = #cccccc)
    table.cell(tbl, 0, 9, "bar_index",             bgcolor = color.gray)
    table.cell(tbl, 1, 9, str.tostring(bar_index[bars_ago]), bgcolor = #cccccc)

    table.cell(tbl, 2, 1,  "second",                      bgcolor = color.gray)
    table.cell(tbl, 3, 1,  str.tostring(second[bars_ago]),          bgcolor = #cccccc)
    table.cell(tbl, 2, 2,  "minute",                      bgcolor = color.gray)
    table.cell(tbl, 3, 2,  str.tostring(minute[bars_ago]),          bgcolor = #cccccc)
    table.cell(tbl, 2, 3,  "hour",                        bgcolor = color.gray)
    table.cell(tbl, 3, 3,  str.tostring(hour[bars_ago]),            bgcolor = #cccccc)
    table.cell(tbl, 2, 4,  "dayofweek",                   bgcolor = color.gray)
    table.cell(tbl, 3, 4,  str.tostring(dayofweek[bars_ago]),       bgcolor = #cccccc)
    table.cell(tbl, 2, 5,  "dayofmonth",                  bgcolor = color.gray)
    table.cell(tbl, 3, 5,  str.tostring(dayofmonth[bars_ago]),      bgcolor = #cccccc)
    table.cell(tbl, 2, 6,  "weekofyear",                  bgcolor = color.gray)
    table.cell(tbl, 3, 6,  str.tostring(weekofyear[bars_ago]),      bgcolor = #cccccc)
    table.cell(tbl, 2, 7,  "month",                       bgcolor = color.gray)
    table.cell(tbl, 3, 7,  str.tostring(month[bars_ago]),           bgcolor = #cccccc)
    table.cell(tbl, 2, 8,  "year",                        bgcolor = color.gray)
    table.cell(tbl, 3, 8,  str.tostring(year[bars_ago]),            bgcolor = #cccccc)
    table.cell(tbl, 2, 9,  "time",                        bgcolor = color.gray)
    table.cell(tbl, 3, 9,  str.tostring(time[bars_ago]),            bgcolor = #cccccc)
    table.cell(tbl, 2, 10, "time_close",                  bgcolor = color.gray)
    table.cell(tbl, 3, 10, str.tostring(time_close[bars_ago]),      bgcolor = #cccccc)
    table.cell(tbl, 2, 11, "time_tradingday",             bgcolor = color.gray)
    table.cell(tbl, 3, 11, str.tostring(time_tradingday[bars_ago]), bgcolor = #cccccc)
    table.cell(tbl, 2, 12, "timenow",                     bgcolor = color.gray)
    table.cell(tbl, 3, 12, str.tostring(timenow[bars_ago]),         bgcolor = #cccccc)

    table.cell(tbl, 4, 1,  "math.e",                      bgcolor = color.gray)
    table.cell(tbl, 5, 1,  str.tostring(math.round(math.e, 3)),          bgcolor = #cccccc)
    table.cell(tbl, 4, 2,  "math.phi",                    bgcolor = color.gray)
    table.cell(tbl, 5, 2,  str.tostring(math.round(math.phi,3 )),        bgcolor = #cccccc)
    table.cell(tbl, 4, 3,  "math.pi",                     bgcolor = color.gray)
    table.cell(tbl, 5, 3,  str.tostring(math.round(math.pi, 3)),         bgcolor = #cccccc)
    table.cell(tbl, 4, 4,  "math.rphi",                   bgcolor = color.gray)
    table.cell(tbl, 5, 4,  str.tostring(math.round(math.rphi, 3)),       bgcolor = #cccccc)


    table.cell(tbl, 4, 6,  "barstate.isconfirmed",                        bgcolor = color.gray)
    table.cell(tbl, 5, 6,  str.tostring(barstate.isconfirmed[bars_ago]),            bgcolor = #cccccc)
    table.cell(tbl, 4, 7,  "barstate.isfirst",                            bgcolor = color.gray)
    table.cell(tbl, 5, 7,  str.tostring(barstate.isfirst[bars_ago]),                bgcolor = #cccccc)
    table.cell(tbl, 4, 8,  "barstate.ishistory",                          bgcolor = color.gray)
    table.cell(tbl, 5, 8,  str.tostring(barstate.ishistory[bars_ago]),              bgcolor = #cccccc)
    table.cell(tbl, 4, 9,  "barstate.islast",                             bgcolor = color.gray)
    table.cell(tbl, 5, 9,  str.tostring(barstate.islast[bars_ago]),                 bgcolor = #cccccc)
    table.cell(tbl, 4, 10, "barstate.islastconfirmedhistory",             bgcolor = color.gray)
    table.cell(tbl, 5, 10, str.tostring(barstate.islastconfirmedhistory[bars_ago]), bgcolor = #cccccc)
    table.cell(tbl, 4, 11, "barstate.isnew",                              bgcolor = color.gray)
    table.cell(tbl, 5, 11, str.tostring(barstate.isnew[bars_ago]),                  bgcolor = #cccccc)
    table.cell(tbl, 4, 12, "barstate.isrealtime",                         bgcolor = color.gray)
    table.cell(tbl, 5, 12, str.tostring(barstate.isrealtime[bars_ago]),             bgcolor = #cccccc)

    table.cell(tbl, 6, 1,  "syminfo.basecurrency",              bgcolor = color.gray)
    table.cell(tbl, 7, 1,  str.tostring(syminfo.basecurrency),  bgcolor = #cccccc)
    table.cell(tbl, 6, 2,  "syminfo.currency",                  bgcolor = color.gray)
    table.cell(tbl, 7, 2,  str.tostring(syminfo.currency),      bgcolor = #cccccc)
    table.cell(tbl, 6, 3,  "syminfo.description",               bgcolor = color.gray)
    table.cell(tbl, 7, 3,  str.tostring(syminfo.description),   bgcolor = #cccccc)
    table.cell(tbl, 6, 4,  "syminfo.mintick",                   bgcolor = color.gray)
    table.cell(tbl, 7, 4,  str.tostring(syminfo.mintick),       bgcolor = #cccccc)
    table.cell(tbl, 6, 5,  "syminfo.pointvalue",                bgcolor = color.gray)
    table.cell(tbl, 7, 5,  str.tostring(syminfo.pointvalue),    bgcolor = #cccccc)
    table.cell(tbl, 6, 6,  "syminfo.prefix",                    bgcolor = color.gray)
    table.cell(tbl, 7, 6,  str.tostring(syminfo.prefix),        bgcolor = #cccccc)
    table.cell(tbl, 6, 7,  "syminfo.root",                      bgcolor = color.gray)
    table.cell(tbl, 7, 7,  str.tostring(syminfo.root),          bgcolor = #cccccc)
    table.cell(tbl, 6, 8,  "syminfo.session",                   bgcolor = color.gray)
    table.cell(tbl, 7, 8,  str.tostring(syminfo.session),       bgcolor = #cccccc)
    table.cell(tbl, 6, 9,  "syminfo.ticker",                    bgcolor = color.gray)
    table.cell(tbl, 7, 9,  str.tostring(syminfo.ticker),        bgcolor = #cccccc)
    table.cell(tbl, 6, 10, "syminfo.tickerid",                  bgcolor = color.gray)
    table.cell(tbl, 7, 10, str.tostring(syminfo.tickerid),      bgcolor = #cccccc)
    table.cell(tbl, 6, 11, "syminfo.timezone",                  bgcolor = color.gray)
    table.cell(tbl, 7, 11, str.tostring(syminfo.timezone),      bgcolor = #cccccc)
    table.cell(tbl, 6, 12, "syminfo.type",                      bgcolor = color.gray)
    table.cell(tbl, 7, 12, str.tostring(syminfo.type),          bgcolor = #cccccc)

    table.cell(tbl, 8, 1,  "ta.accdist",              bgcolor = color.gray)
    table.cell(tbl, 9, 1,  str.tostring(math.round(ta.accdist[bars_ago], 4)),  bgcolor = #cccccc)
    table.cell(tbl, 8, 2,  "ta.iii",                  bgcolor = color.gray)
    table.cell(tbl, 9, 2,  str.tostring(math.round(ta.iii[bars_ago], 4)),      bgcolor = #cccccc)
    table.cell(tbl, 8, 3,  "ta.nvi",                  bgcolor = color.gray)
    table.cell(tbl, 9, 3,  str.tostring(math.round(ta.nvi[bars_ago], 4)),      bgcolor = #cccccc)
    table.cell(tbl, 8, 4,  "ta.obv",                  bgcolor = color.gray)
    table.cell(tbl, 9, 4,  str.tostring(math.round(ta.obv[bars_ago], 4)),      bgcolor = #cccccc)
    table.cell(tbl, 8, 5,  "ta.pvi",                  bgcolor = color.gray)
    table.cell(tbl, 9, 5,  str.tostring(math.round(ta.pvi[bars_ago], 4)),      bgcolor = #cccccc)
    table.cell(tbl, 8, 6,  "ta.pvt",                  bgcolor = color.gray)
    table.cell(tbl, 9, 6,  str.tostring(math.round(ta.pvt[bars_ago], 4)),      bgcolor = #cccccc)
    table.cell(tbl, 8, 7,  "ta.tr",                   bgcolor = color.gray)
    table.cell(tbl, 9, 7,  str.tostring(math.round(ta.tr[bars_ago], 4)),       bgcolor = #cccccc)
    table.cell(tbl, 8, 8,  "ta.vwap",                 bgcolor = color.gray)
    table.cell(tbl, 9, 8,  str.tostring(math.round(ta.vwap[bars_ago], 4)),     bgcolor = #cccccc)
    table.cell(tbl, 8, 9,  "ta.wad",                  bgcolor = color.gray)
    table.cell(tbl, 9, 9,  str.tostring(math.round(ta.wad[bars_ago], 4)),      bgcolor = #cccccc)
    table.cell(tbl, 8, 10, "ta.wvad",                 bgcolor = color.gray)
    table.cell(tbl, 9, 10, str.tostring(math.round(ta.wvad[bars_ago], 4)),     bgcolor = #cccccc)

    table.cell(tbl, 10, 1,  "timeframe.isdaily",                 bgcolor = color.gray)
    table.cell(tbl, 11, 1,  str.tostring(timeframe.isdaily),     bgcolor = #cccccc)
    table.cell(tbl, 10, 2,  "timeframe.isdwm",                   bgcolor = color.gray)
    table.cell(tbl, 11, 2,  str.tostring(timeframe.isdwm),       bgcolor = #cccccc)
    table.cell(tbl, 10, 3,  "timeframe.isintraday",              bgcolor = color.gray)
    table.cell(tbl, 11, 3,  str.tostring(timeframe.isintraday),  bgcolor = #cccccc)
    table.cell(tbl, 10, 4,  "timeframe.isminutes",               bgcolor = color.gray)
    table.cell(tbl, 11, 4,  str.tostring(timeframe.isminutes),   bgcolor = #cccccc)
    table.cell(tbl, 10, 5,  "timeframe.ismonthly",               bgcolor = color.gray)
    table.cell(tbl, 11, 5,  str.tostring(timeframe.ismonthly),   bgcolor = #cccccc)
    table.cell(tbl, 10, 6,  "timeframe.isseconds",               bgcolor = color.gray)
    table.cell(tbl, 11, 6,  str.tostring(timeframe.isseconds),   bgcolor = #cccccc)
    table.cell(tbl, 10, 7,  "timeframe.isweekly",                bgcolor = color.gray)
    table.cell(tbl, 11, 7,  str.tostring(timeframe.isweekly),    bgcolor = #cccccc)
    table.cell(tbl, 10, 8,  "timeframe.multiplier",              bgcolor = color.gray)
    table.cell(tbl, 11, 8,  str.tostring(timeframe.multiplier),  bgcolor = #cccccc)
    table.cell(tbl, 10, 9,  "timeframe.period",                  bgcolor = color.gray)
    table.cell(tbl, 11, 9,  str.tostring(timeframe.period),      bgcolor = #cccccc)

