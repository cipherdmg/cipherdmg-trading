//@version=5
// ||###################################################################################||
// ||                                                                                   ||
// || https://www.tradingview.com/script/tjTzU6NR-Strat-FTFC-Vip3rr-AutoSizing/
// ||                                                                                   ||
// ||                                                                                   ||
// ||###################################################################################||


//@version=5

indicator(title='The Strat FTFC', shorttitle='The Strat FTFC', overlay=true)

bullishColor = input.color(color.green, title='Bullish color', group='Colors')
bearishColor = input.color(color.red, title='Bearish color', group='Colors')
insideColor = input.color(color.yellow, title='Bearish color', group='Colors')
tfTableOpacity = input.int(80, title='Multi time frame table opacity', group='Colors')
isTfEnabled = input.bool(true, title='Enabled', group='Time frame continuation')
usePreviousClose = input.bool(false, title='Use previous close', group='Time frame continuation')

tfa1 = input.timeframe('15', title='Time Frame 1', group='Time frame continuation')
tfa2 = input.timeframe('30', title='Time Frame 2', group='Time frame continuation')
tfa3 = input.timeframe('60', title='Time Frame 3', group='Time frame continuation')
tfa4 = input.timeframe('D', title='Time Frame 4', group='Time frame continuation')
tfa5 = input.timeframe('W', title='Time Frame 5', group='Time frame continuation')
tfa6 = input.timeframe('1M', title='Time Frame 6', group='Time frame continuation')
tfa7 = input.timeframe('3M', title='Time Frame 7', group='Time frame continuation')

cdayhigh = request.security(syminfo.tickerid, 'D', high)
cdaylow = request.security(syminfo.tickerid, 'D', low)
dAtr = request.security(syminfo.tickerid, 'D', ta.atr(14), lookahead=barmerge.lookahead_on)

var table tcTable = table.new(position=position.top_right, columns = 9, rows = 2, border_width=3)

[tfa1PrevClose, tfa1Close] = request.security(syminfo.tickerid, tfa1, [usePreviousClose ? close[1] : open[0], close[0]], barmerge.gaps_off)
[tfa2PrevClose, tfa2Close] = request.security(syminfo.tickerid, tfa2, [usePreviousClose ? close[1] : open[0], close[0]], barmerge.gaps_off)
[tfa3PrevClose, tfa3Close] = request.security(syminfo.tickerid, tfa3, [usePreviousClose ? close[1] : open[0], close[0]], barmerge.gaps_off)
[tfa4PrevClose, tfa4Close] = request.security(syminfo.tickerid, tfa4, [usePreviousClose ? close[1] : open[0], close[0]], barmerge.gaps_off)
[tfa5PrevClose, tfa5Close] = request.security(syminfo.tickerid, tfa5, [usePreviousClose ? close[1] : open[0], close[0]], barmerge.gaps_off)
[tfa6PrevClose, tfa6Close] = request.security(syminfo.tickerid, tfa6, [usePreviousClose ? close[1] : open[0], close[0]], barmerge.gaps_off)
[tfa7PrevClose, tfa7Close] = request.security(syminfo.tickerid, tfa7, [usePreviousClose ? close[1] : open[0], close[0]], barmerge.gaps_off)

h = high
l = low
c = close
o = open

onebar = h <= h[1] and l >= l[1]
twobar = h <= h[1] and l < l[1] or h > h[1] and l >= l[1]
threebar = h > h[1] and l < l[1]
greenbar = o <= c
red = o >= c



if barstate.islast and isTfEnabled
    tfa1Bullish = tfa1Close > tfa1PrevClose
    tfa2Bullish = tfa2Close > tfa2PrevClose
    tfa3Bullish = tfa3Close > tfa3PrevClose
    tfa4Bullish = tfa4Close > tfa4PrevClose
    tfa5Bullish = tfa5Close > tfa5PrevClose
    tfa6Bullish = tfa6Close > tfa6PrevClose
	tfa7Bullish = tfa7Close > tfa7PrevClose

    tfa1Chg = (tfa1Close - tfa1PrevClose) / tfa1PrevClose * 100.0
    tfa1Color = tfa1Bullish ? bullishColor : bearishColor

    tfa2Chg = (tfa2Close - tfa2PrevClose) / tfa2PrevClose * 100.0
    tfa2Color = tfa2Bullish ? bullishColor : bearishColor

    tfa3Chg = (tfa3Close - tfa3PrevClose) / tfa3PrevClose * 100.0
    tfa3Color = tfa3Bullish ? bullishColor : bearishColor

    tfa4Chg = (tfa4Close - tfa4PrevClose) / tfa4PrevClose * 100.0
    tfa4Color = tfa4Bullish ? bullishColor : bearishColor

    tfa5Chg = (tfa5Close - tfa5PrevClose) / tfa5PrevClose * 100.0
    tfa5Color = tfa5Bullish ? bullishColor : bearishColor

    tfa6Chg = (tfa6Close - tfa6PrevClose) / tfa6PrevClose * 100.0
    tfa6Color = tfa6Bullish ? bullishColor : bearishColor

	tfa7Chg = (tfa7Close - tfa7PrevClose) / tfa7PrevClose * 100.0
    tfa7Color = tfa7Bullish ? bullishColor : bearishColor

    table.cell(tcTable, 0, 0, tfa1 + '\n' + str.tostring(tfa1Chg, '#.##') + '%', bgcolor=color.new(tfa1Color, tfTableOpacity), text_color=tfa1Color, text_size=size.auto, width=0)
    table.cell(tcTable, 1, 0, tfa2 + '\n' + str.tostring(tfa2Chg, '#.##') + '%', bgcolor=color.new(tfa2Color, tfTableOpacity), text_color=tfa2Color, text_size=size.auto, width=0)
    table.cell(tcTable, 2, 0, tfa3 + '\n' + str.tostring(tfa3Chg, '#.##') + '%', bgcolor=color.new(tfa3Color, tfTableOpacity), text_color=tfa3Color, text_size=size.auto, width=0)
    table.cell(tcTable, 3, 0, tfa4 + '\n' + str.tostring(tfa4Chg, '#.##') + '%', bgcolor=color.new(tfa4Color, tfTableOpacity), text_color=tfa4Color, text_size=size.auto, width=0)
    table.cell(tcTable, 4, 0, tfa5 + '\n' + str.tostring(tfa5Chg, '#.##') + '%', bgcolor=color.new(tfa5Color, tfTableOpacity), text_color=tfa5Color, text_size=size.auto, width=0)
    table.cell(tcTable, 5, 0, tfa6 + '\n' + str.tostring(tfa6Chg, '#.##') + '%', bgcolor=color.new(tfa6Color, tfTableOpacity), text_color=tfa6Color, text_size=size.auto, width=0)
	table.cell(tcTable, 6, 0, tfa7 + '\n' + str.tostring(tfa7Chg, '#.##') + '%', bgcolor=color.new(tfa7Color, tfTableOpacity), text_color=tfa7Color, text_size=size.auto, width=0)
    table.cell(tcTable, 7, 0, 'DTR' + '\n' + str.tostring(cdayhigh - cdaylow, '#.##'), bgcolor=color.new(color.gray, tfTableOpacity), text_color=color.white, text_size=size.auto, width=0)
    table.cell(tcTable, 8, 0, 'ATR' + '\n' + str.tostring(dAtr, '#.##'), bgcolor=color.new(color.gray, tfTableOpacity), text_color=color.white, text_size=size.auto, width=0)

